import streamlit as st
from utils.unet_utils import run_unet_segmentation
from PIL import Image
import requests
from io import BytesIO

st.title("üõ∞Ô∏è –°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è —Å–ø—É—Ç–Ω–∏–∫–æ–≤—ã—Ö —Å–Ω–∏–º–∫–æ–≤ (Unet)")

tab1, tab2 = st.tabs(["–°–µ—Ä–≤–∏—Å", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏"])

with tab1:
    source = st.radio("–ò—Å—Ç–æ—á–Ω–∏–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:", ["–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤", "–°—Å—ã–ª–∫–∞ (URL)"])

    if source == "–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤":
        uploaded_files = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", type=['jpg', 'jpeg', 'png'], accept_multiple_files=True)
        for file in uploaded_files:
            image = Image.open(file)
            mask = run_unet_segmentation(image)
            st.image(mask, caption=f"–°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è: {file.name}", use_column_width=True)
    else:
        url = st.text_input("–í–≤–µ–¥–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:")
        if st.button("–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ"):
            try:
                response = requests.get(url)
                image = Image.open(BytesIO(response.content))
                mask = run_unet_segmentation(image)
                st.image(mask, caption="–°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è (–ø–æ —Å—Å—ã–ª–∫–µ)", use_column_width=True)
            except:
                st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")

with tab2:
    st.header("Unet –¥–ª—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏")
    st.markdown("""
    - **–ú–æ–¥–µ–ª—å**: UNet (–Ω–∞ –æ—Å–Ω–æ–≤–µ ResNet34 encoder)
    - **–û–±—É—á–µ–Ω–∏–µ**: 25 —ç–ø–æ—Ö
    - **IoU**: 0.77
    - **mAP**: 0.74  
    """)
    st.image("assets/map_stats_unet.png", caption="PR / IoU / F1-–≥—Ä–∞—Ñ–∏–∫–∏")